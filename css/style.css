.parent {
    width: 1000px;
    margin: 50px auto;
    height: 500px;
    border: 1px solid red;
    display: flex;

}

.child {
    width: 100px;
    text-align: center;
    height: 100px;
    border: 1px solid blue;
    flex-grow: 1;
}

.child-element {
    flex-grow: 3;
}


/*

С помощью flex-grow рассчитывай так, чтобы 4-й child-элемент был 
шириной в 250px

*/

/* 
flex-grow - свойство называется еще жадностью элементов.

Например ширина родительского блока 700px.
Ширина child-элементов, которые находятся внутри
этого родителя по 100px. 

100 * 4 = 400px.

400px - пространство которое занято элементами.
Необходимо узнать сколько свободного пространства остается.

700px - 400px = 300px.

Свободного пространства остается 300px.

Если дать каждому элементу значение flex-grow: 1;, то 
все будут иметь свою единицу. И эта единица, является 
правом на свободное пространство. То есть сейчас, 
у нас каждый элемент имеет равные права на свободное
пространство.

Делим свободное пространство 300px на 4 элемента с равными правами flex-grow.

300px/4 = 75px. 

Каждый элемент получит свое право в виде 75px на свободно пространство и
таким образом каждый элемент получает + к своей ширине 100px еще 
дополнительных 75px свободного пространства.

100px + 75px = 175px.
Каждый элемент у нас распределяется равномерно по родительскому блоку.


Предположим какому-либо элементу под отдельный класс мы зададим flex-grow: 2;,

Следовательно - 3 элемента с правами на свободное пространство flex-grow: 1;
и - 1 элемент с правом на свободное пространство flex-grow: 2;
Всего flex-grow = 5. 

В таком случае свободное пространство рассчитывается таким образом: 
Свободное пространство 300px делим на количество flex-grow 5.

300px / 5 = 60px.

Получаем, что каждый элемент имеет свое право на свободное пространство в виде 60px. 

То есть если у элемента своя ширина 100px + 60px свободного пространства, то в 
итоге ширина каждого из трех элементов будет = 160px. А ширина 4-го будет
равна 220px(60px * 2 = 120px + 100px = 220px). Потому как за счет flex-grow: 2; он забирает себе две части свободного
пространства.



КОРОТКО 
свободное пространство / на общее количество flex-grow = суму которую получаем:

-плюсуем с шириной элемента и получаем ширину всех элементов с обычным flex-grow.

-умножаем на количество flex-grow с высоким flex-grow + ширина элемента.

*/



/*  ОБЩАЯ ИНФОРМАЦИЯ */

/* 1-flex-basis. Высота или ширина в зависимости от направления оси */
/* 2-flex-grow. Позитивное значение может тянет элементы на всю ширину родителя */


/* flex-basis, flex-shrink и flex-grow свойства 
которые используются только для child-элементов.
Например свойство - flex-basis: 50px; - это ШИРИНА 
child-элемента при условии, если у родителя задано 
свойство flex-direction: row;
Если родителю задано flex-direction: column;,
то child-элементы получают значение ВЫСОТЫ в 50px.   */

